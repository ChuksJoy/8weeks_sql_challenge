-----------------------------
-- A. Pizza Metrics ---------
-----------------------------

---1. How many pizzas were ordered?

**Query #1**

    SET search_path = pizza_runner;

There are no results to be displayed.

---
**Query #2**

    SELECT COUNT(*) AS pizza_order_count
    FROM customer_orders;

| pizza_order_count |
| ----------------- |
| 14                |


---2. How many unique customer orders were made?
**Query #2**

    SELECT COUNT(DISTINCT order_id) AS unique_order_count
    FROM customer_orders;

| unique_order_count |
| ------------------ |
| 10                 |


---3. How many successful orders were delivered by each runner?

**Query #1**

    SET search_path = pizza_runner;

There are no results to be displayed.

---
**Query #2**

    SELECT runner_id, COUNT(order_id) AS successful_orders
    FROM runner_orders
    WHERE distance != '' 
    GROUP BY runner_id;

| runner_id | successful_orders |
| --------- | ----------------- |
| 3         | 2                 |
| 2         | 4                 |
| 1         | 4                 |


---4. How many of each type of pizza was delivered?
**Query #1**

    SET search_path = pizza_runner;

There are no results to be displayed.

---
**Query #2**

    SELECT pizza_name, COUNT(pizza_id) AS pizza_delivered
    FROM customer_orders 
    JOIN runner_orders 
     USING (order_id)
    JOIN pizza_names 
     USING (pizza_id)
    WHERE distance != ''
    GROUP BY pizza_name;

| pizza_name | pizza_delivered |
| ---------- | --------------- |
| Meatlovers | 10              |
| Vegetarian | 4               |


---5. How many Vegetarian and Meatlovers were ordered by each customer?
**Query #1**

    SET search_path = pizza_runner;

There are no results to be displayed.

---
**Query #2**

    SELECT customer_id, 
     SUM(
            CASE
                WHEN pizza_id = 1 THEN 1
                ELSE 0
            END
        ) as meatlovers,
        SUM(
            CASE
                WHEN pizza_id = 2 THEN 1
                ELSE 0
            END
        ) as vegetarians
        FROM customer_orders 
    GROUP BY customer_id
    ORDER BY customer_id;

| customer_id | meatlovers | vegetarians |
| ----------- | ---------- | ----------- |
| 101         | 2          | 1           |
| 102         | 2          | 1           |
| 103         | 3          | 1           |
| 104         | 3          | 0           |
| 105         | 0          | 1           |


---6. What was the maximum number of pizzas delivered in a single order?
**Query #1**

    SET search_path = pizza_runner;

There are no results to be displayed.

---
**Query #2**

    WITH total_pizza_per_order AS
    (
     SELECT order_id, COUNT(pizza_id) AS pizza_per_order
     FROM customer_orders 
     JOIN runner_orders
      USING (order_id)
     WHERE distance != ''
     GROUP BY order_id
    )
    
    SELECT MAX(pizza_per_order) AS max_no_of_pizzas_in_single_order
    FROM total_pizza_per_order;

| max_no_of_pizzas_in_single_order |
| -------------------------------- |
| 3                                |


---7. For each customer, how many delivered pizzas had at least 1 change and how many had no changes?
**Query #1**

    SET search_path = pizza_runner;

There are no results to be displayed.

---
**Query #2**

    SELECT 
        customer_id,
        SUM(CASE
            WHEN exclusions != ' ' OR extras != ' ' THEN 1
            ELSE 0
    		END) AS changes,
        SUM(CASE
            WHEN exclusions = ' ' AND extras = ' ' THEN 1
            ELSE 0
    		END) AS no_changes
    FROM customer_orders 
    JOIN runner_orders  
    USING(order_id)
    WHERE distance != ' '
    GROUP BY customer_id;

| customer_id | changes | no_changes |
| ----------- | ------- | ---------- |
| 101         | 3       | 0          |
| 103         | 4       | 0          |
| 104         | 3       | 0          |
| 105         | 1       | 0          |
| 102         | 3       | 0          |

      
---8. How many pizzas were delivered that had both exclusions and extras?
SELECT  
 SUM(CASE
  WHEN exclusions IS NOT NULL AND extras IS NOT NULL THEN 1
  ELSE 0
  END) AS pizza_count_w_exclusions_extras
FROM #customer_orders AS c
JOIN #runner_orders AS r
 ON c.order_id = r.order_id
WHERE r.distance >= 1 
 AND exclusions <> ' ' 
 AND extras <> ' ';
 
---9. What was the total volume of pizzas ordered for each hour of the day?
---10. What was the volume of orders for each day of the week?
