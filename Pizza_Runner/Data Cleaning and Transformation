---------------------------------------------------------
-- Danny Ma's - 8 Week SQL Challenge (Case study #2) --
-- https://8weeksqlchallenge.com/case-study-2/ --
----------------------------------------------------------
-- Done with PostgreSQL(pgAdmin4)
-- By Joy Chuks-Nwosu
-- Date: 14/07/2022

--- Cleaning the data in two tables; customer_order and runner_order
 
# From Table Name: customer_order
we will clean the table data provided using the CASE function and making a temporary table

**Query #1**

    CREATE TEMP TABLE temp_customer_orders AS (
    SELECT order_id, customer_id, pizza_id, 
    CASE
      WHEN exclusions = '' THEN NULL 
      WHEN exclusions = 'null' THEN NULL 
      ELSE exclusions
      END AS exclusions, 
    CASE 
      WHEN extras = '' THEN NULL
      WHEN extras = 'null' THEN NULL 
      ELSE extras
      END AS extras,
      order_time
    FROM pizza_runner.customer_orders
    );

There are no results to be displayed.

---
**Query #2**

    SELECT * FROM temp_customer_orders;

| order_id | customer_id | pizza_id | exclusions | extras | order_time               |
| -------- | ----------- | -------- | ---------- | ------ | ------------------------ |
| 1        | 101         | 1        |            |        | 2020-01-01T18:05:02.000Z |
| 2        | 101         | 1        |            |        | 2020-01-01T19:00:52.000Z |
| 3        | 102         | 1        |            |        | 2020-01-02T23:51:23.000Z |
| 3        | 102         | 2        |            |        | 2020-01-02T23:51:23.000Z |
| 4        | 103         | 1        | 4          |        | 2020-01-04T13:23:46.000Z |
| 4        | 103         | 1        | 4          |        | 2020-01-04T13:23:46.000Z |
| 4        | 103         | 2        | 4          |        | 2020-01-04T13:23:46.000Z |
| 5        | 104         | 1        |            | 1      | 2020-01-08T21:00:29.000Z |
| 6        | 101         | 2        |            |        | 2020-01-08T21:03:13.000Z |
| 7        | 105         | 2        |            | 1      | 2020-01-08T21:20:29.000Z |
| 8        | 102         | 1        |            |        | 2020-01-09T23:54:33.000Z |
| 9        | 103         | 1        | 4          | 1, 5   | 2020-01-10T11:22:59.000Z |
| 10       | 104         | 1        |            |        | 2020-01-11T18:34:49.000Z |
| 10       | 104         | 1        | 2, 6       | 1, 4   | 2020-01-11T18:34:49.000Z |


---TABLE: runner_orders

#From this table, we will be cleaning the;
-- pickup_time - remove the nulls and replace with ' '
-- distance - contains units in km, remove km and nulls
-- duration - remove the 'min', 'minute' 'minutes' and nulls
-- cancellation - remove NULL and null and replace with ' ' 

**Query #1**

    SET search_path = pizza_runner;

There are no results to be displayed.

---
**Query #2**

    DROP TABLE IF EXISTS temp_runner_orders;

There are no results to be displayed.

---
**Query #3**

    CREATE TEMP TABLE runner_orders_cleaned AS (
    SELECT order_id, runner_id,
    CASE
    	WHEN pickup_time LIKE 'null' THEN ' '
    	ELSE pickup_time
    	END AS pickup_time,
    CASE
    	WHEN distance LIKE 'null' THEN ' '
    	WHEN distance LIKE '%km' THEN TRIM('km' from distance)
    	ELSE distance
    	END AS distance,
    CASE
    	WHEN duration LIKE 'null' THEN ' '
    	WHEN duration LIKE '%mins' THEN TRIM('mins' from duration)
    	WHEN duration LIKE '%minute' THEN TRIM('minute' from duration)
    	WHEN duration LIKE '%minutes' THEN TRIM('minutes' from duration)
    	ELSE duration
    	END AS duration,
    CASE
    	WHEN cancellation IS NULL or cancellation LIKE 'null' THEN ' '
    	ELSE cancellation
    	END AS cancellation
    FROM pizza_runner.runner_orders
    );

There are no results to be displayed.

---
**Query #4**

    SELECT * FROM runner_orders_cleaned;

| order_id | runner_id | pickup_time         | distance | duration | cancellation            |
| -------- | --------- | ------------------- | -------- | -------- | ----------------------- |
| 1        | 1         | 2020-01-01 18:15:34 | 20       | 32       |                         |
| 2        | 1         | 2020-01-01 19:10:54 | 20       | 27       |                         |
| 3        | 1         | 2020-01-03 00:12:37 | 13.4     | 20       |                         |
| 4        | 2         | 2020-01-04 13:53:03 | 23.4     | 40       |                         |
| 5        | 3         | 2020-01-08 21:10:57 | 10       | 15       |                         |
| 6        | 3         |                     |          |          | Restaurant Cancellation |
| 7        | 2         | 2020-01-08 21:30:45 | 25       | 25       |                         |
| 8        | 2         | 2020-01-10 00:15:02 | 23.4     | 15       |                         |
| 9        | 2         |                     |          |          | Customer Cancellation   |
| 10       | 1         | 2020-01-11 18:50:20 | 10       | 10       |                         |


ALTER COLUMN pickup_time TYPE DATETIME,
ALTER COLUMN distance TYPE FLOAT,
ALTER COLUMN duration TYPE INT;
